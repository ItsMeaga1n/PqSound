/**
 * Module for constants variabes and enums
 * @module Constants
 */

/**
 * array of all 88 keys to help determine if specific key is black (1) or white (0)
 */
let keyNotes = [0, 1, 0];
for (let i = 0; i < 7; i++) {
    keyNotes.push(0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0)
}
keyNotes.push(0);
module.exports.keyNotes = keyNotes;

/**
 * array of all 88 frequencies for each note starting from a0
 */
let keyFrequencies = [27.50];
let multipler = Math.pow(2, 1 / 12)
for (let i = 1; i < 89; i++) {
    keyFrequencies.push(keyFrequencies[i - 1] * multipler)
}
module.exports.keyFrequencies = keyFrequencies;

/**
 * object containing all available note lengths
 */
module.exports.noteLengths = {
    fullNote: { name: '1/1', id: 0 },
    halfNote: { name: '1/2', id: 1 },
    quarterNote: { name: '1/4', id: 2 },
    eighthNote: { name: '1/8', id: 3 },
    sixteenthNote: { name: '1/16', id: 4 }
}

/**
 * object containing all available tools
 */
module.exports.tools = {
    draw: { name: 'Draw', id: 0 },
    select: { name: 'Select', id: 1 },
    remove: { name: 'Remove', id: 2 }
}

/**
 * object constaining all available instruments
 */
module.exports.Instruments = {
    Sampler: { name: 'Sampler', id: 0 },
    PqSynth: { name: 'PqSynth', id: 1 },
    Monotron: { name: 'Monotron', id: 2 }
}

/**
 * enum of update actions
 */
module.exports.updateActions = {
    solo: 0,
    mute: 1,
    recotd: 2,
    add: 3,
    remove: 4
};

/**
 * enum of available track types
 */
module.exports.TrackTypes = {
    virtualInstrument: 0,
    audio: 1,
    aux: 2
}

/**
 * enum for determining how to handle stopping sound
 */
module.exports.SoundOrigin = {
    composition: 0, //Sounds scheduled by sequencer
    pianoRollNote: 1, //Sounds generated by tweaking pianoRoll
    keyboard: 2 //Sounds generated by playing on keyboard
}

/**
 * widths in pixels for every piano key to determine if need to be displayed
 */
let keyboardWidths = [  {sharp: false, startWidth: 0}, {sharp: true, startWidth: 47}, {sharp: false, startWidth: 66}];
let octaveKeysWidth = [ {sharp: false, startWidth: 0}, {sharp: true, startWidth: 55}, {sharp: false, startWidth: 66},
                        {sharp: true, startWidth: 123}, {sharp: false, startWidth: 122}, {sharp: false, startWidth: 198},
                        {sharp: true, startWidth: 254}, {sharp: false, startWidth: 264}, {sharp: true, startWidth: 322},
                        {sharp: false, startWidth: 330}, {sharp: true, startWidth: 389}, {sharp: false, startWidth: 396}]
for(let i = 0; i < 7; i++){
    for(let j = 0; j < 12; j++){
        keyboardWidths.push({sharp: octaveKeysWidth[j].sharp, startWidth: octaveKeysWidth[j].startWidth + 122 + i * 462});
    }
}
keyboardWidths.push({sharp: false, startWidth: keyboardWidths[86].startWidth + 66});
module.exports.keyboardWidths = keyboardWidths;


/**
 * List of strings representing each of 88 notes musical notation for displaying purpose
 */
let keys = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
let defaultKeysNames = ['A', 'A#', 'B'];
for(let i = 0; i < 8; i++){
for(let j = 0; j < keys.length; j++){
    defaultKeysNames.push(keys[j]);
}
}
defaultKeysNames.push('C');

module.exports.defaultKeysNames = defaultKeysNames;

module.exports.defaultKeyBindings = [
    {MIDINote: 21, keyboardKey: 'q'},
    {MIDINote: 22, keyboardKey: '2'},
    {MIDINote: 23, keyboardKey: 'w'},
    {MIDINote: 24, keyboardKey: 'e'},
    {MIDINote: 25, keyboardKey: '4'},
    {MIDINote: 26, keyboardKey: 'r'},
    {MIDINote: 27, keyboardKey: '5'},
    {MIDINote: 28, keyboardKey: 't'},
    {MIDINote: 29, keyboardKey: 'y'},
    {MIDINote: 30, keyboardKey: '7'},
    {MIDINote: 31, keyboardKey: 'u'},
    {MIDINote: 32, keyboardKey: '8'},
    {MIDINote: 33, keyboardKey: 'i'},
    {MIDINote: 34, keyboardKey: '9'},
    {MIDINote: 35, keyboardKey: 'o'},
    {MIDINote: 36, keyboardKey: 'z'},
    {MIDINote: 37, keyboardKey: 's'},
    {MIDINote: 38, keyboardKey: 'x'},
    {MIDINote: 39, keyboardKey: 'd'},
    {MIDINote: 40, keyboardKey: 'c'},
    {MIDINote: 41, keyboardKey: 'v'},
    {MIDINote: 42, keyboardKey: 'g'},
    {MIDINote: 43, keyboardKey: 'b'},
    {MIDINote: 44, keyboardKey: 'h'},
    {MIDINote: 45, keyboardKey: 'n'},
    {MIDINote: 46, keyboardKey: 'j'},
    {MIDINote: 47, keyboardKey: 'm'},
    {MIDINote: 48, keyboardKey: ','},
    {MIDINote: 49, keyboardKey: 'l'},
    {MIDINote: 50, keyboardKey: '.'},
    {MIDINote: 51, keyboardKey: ';'},
    {MIDINote: 52, keyboardKey: '/'}
]